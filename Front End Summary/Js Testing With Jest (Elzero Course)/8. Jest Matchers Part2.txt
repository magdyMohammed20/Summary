(1) toBeFalsy() Matcher
-------------------------

    say.js
    -------
    const data = [1,2,'a',4,5,6];

    module.exports = data;

    say.test.js
    ------------

    const data = require('../say');

    test("Check Falsy" , () => {
        for(let x = 0; x < data.length; x++){
            expect(isNaN(data[x])).toBeFalsy();
        }
    });


(2) toBeTruthy() Matcher
-------------------------

    say.js
    -------
    const data = [1,2,'a',4,5,6];

    module.exports = data;

    say.test.js
    ------------

    const data = require('../say');

    test("Check Falsy" , () => {
        for(let x = 0; x < data.length; x++){
            expect(isNaN(data[x])).toBeTruthy();
        }
    });


(3) toBeGreaterThan() Matcher
------------------------------

    say.js
    -------
    const data = [10,20];

    module.exports = data;

    say.test.js
    ------------

    const data = require('../say');

    test("Check Falsy" , () => {
        for(let x = 0; x < data.length; x++){
            expect((data[x])).toBeGreaterThan(100);
        }
    });


(4) toBeGreaterThanOrEqual() Matcher
-------------------------------------

    say.js
    -------
    const data = [10,20];

    module.exports = data;

    say.test.js
    ------------

    const data = require('../say');

    test("Check Falsy" , () => {
        for(let x = 0; x < data.length; x++){
            expect((data[x])).toBeGreaterThanOrEqual(10);
        }
    });


(5) toBeLessThan() Matcher
------------------------------

    say.js
    -------
    const data = [10,20];

    module.exports = data;

    say.test.js
    ------------

    const data = require('../say');

    test("Check Falsy" , () => {
        for(let x = 0; x < data.length; x++){
            expect((data[x])).toBeLessThan(100);
        }
    });


(6) toBeLessThanOrEqual() Matcher
-----------------------------------

    say.js
    -------
    const data = [10,20];

    module.exports = data;

    say.test.js
    ------------

    const data = require('../say');

    test("Check Falsy" , () => {
        for(let x = 0; x < data.length; x++){
            expect((data[x])).toBeLessThanOrEqual(100);
        }
    });