(1) fallback: true
---------------------
==> First Point : The Paths Returned From 'getStaticPaths' Will Be Rendered To Html At Build Time By 'getStaticProps'
==> Second Point : Any Paths Not Returned By 'getStaticPaths' Will Not Produce 404 Page As NextJs Serve A 'Fallback' Version Of A Page In First Request
==> Third Point : In Background NextJs Statically Generate The Requested Path Html And Json This Includes Running 'getStaticProps'

(2) After Build Following Code using [yarn build] Will Get Error [Error occurred prerendering page "/posts/[postId]"]
------------------------------------------------------------------------------------------------------------------------

    /pages/posts/index.js
    ------------------------

    import Link from 'next/link'

    export default function postList({ posts }) {

        return (
            <>
                {
                    posts.map(({ id, title, body }) => <div key={id}>
                        <Link href={`/posts/${id}`} passHref>
                            <h1>{title}</h1>
                        </Link>
                        <p>{body}</p>
                    </div>)
                }
            </>
        )
    }

    export async function getStaticProps() {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts')
        const data = await response.json()

        return {
            props: {
                posts: data.slice(0, 3)
            }
        }
    }


    /pages/posts/[postId].js
    --------------------------

    export default function singleProduct({ post }) {
        return <>
            <h1>{post.title}</h1>
            <p>
                {post.body}
            </p>
        </>
    }

    export async function getStaticPaths() {

        return {
            paths: [
                {
                    params: {
                        postId: '1'
                    }
                },
                {
                    params: {
                        postId: '2'
                    }
                },
                {
                    params: {
                        postId: '3'
                    }
                }
            ],
            fallback: true
        }
    }

    export async function getStaticProps(context) {

        const { params } = context
        const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${params.postId}`)
        const data = await response.json()

        console.log(params)
        return {
            props: {
                post: data
            }
        }
    }


(3) Solution Of Error In (2)
-------------------------------- 
==> Check FallBack Inside 'singleProduct' Component Only
==> This Is Explanation For First Point In (1)

    /pages/posts/[postId].js
    --------------------------

    import { useRouter } from "next/router" // 1- Import useRouter

    // Note That 'SingleProduct' Start With Capital Letter
    export default function SingleProduct({ post }) {

        const router = useRouter() // 2- Assign useRouter

        // 3- Check FallBack
        if (router.isFallback) {
            return <h1>Loading...</h1>
        }

        return <>
            <h1>{post.title}</h1>
            <p>
                {post.body}
            </p>
        </>
    }

(4) Explanation Of Second Point
---------------------------------
==> After Build [yarn build] App Run [yarn start]
==> If Explore To [localhost:3000/posts/1 , localhost:3000/posts/2 , localhost:3000/posts/3] It Will Get Normal Content 
==> But If Explore To [localhost:3000/posts/[Any Other Id]] Will Show 'Loading...' Then Automatic Will Fetch Data Of Specified Id And Display It Easily

(5) Explanation Of Third Point
--------------------------------
==> If Go To [localhost:3000/posts/90] NextJs Will Generate [90.html , 90.json] Inside '.next/server/pages/posts' Automatic
==> Note That We Not Specify '90' In 'getStaticPaths' We Only Specify [1,2,3]
==> But At First Time When Navigate To [localhost:3000/posts/90] If Open Network Tab And See '90' File Preview Tab Will Note That It Load 'Loading...' Not Page Content


(6) If User Change Url Like [localhost:3000/posts/hh] And 'hh' Not Founded In API So Can Handle This In 'getStaticProps'
----------------------------------------------------------------------------------------------------------------------------
==> But Must Rebuild Using [yarn build] Then [yarn start]


    /pages/posts/[postId].js
    --------------------------

    export async function getStaticProps(context) {

        const { params } = context
        const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${params.postId}`)
        const data = await response.json()

        // Handle Not Found Page Here
        if (!data.id) {
            return {
                notFound: true
            }
        }

        return {
            props: {
                post: data
            }
        }
    }


(7) If Remove '.slice(0,3)' From 'getStaticProps' And Build App Using [yarn build] Then [yarn start] And Open [localhost:3000/posts] Will Note That In '.next/server/pages/posts' All Posts Id Generated As Html And Json Files And If Scroll In Posts Page Will Note That Json Files Generated In Network Tab


(8) When Use fallback: true
------------------------------- 
==> If App Has Very Large Number If Static Pages That Depend On Data  [EX: Ecommerce Site]