(1) Portals
------------
==> provide a first-class way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.

==> Inside 'index.html' There Are Element With Id 'root' And All Elements And Components Rendered Inside This Element
    Portals Provide Way That You Can Render The Element Outside This Element With Id 'root'
    
    
EX [All Elements Rendered Inside id="root" Element Not Inside id="portal-root"]
----


	index.html [Note Here We Create id="portal-root" Element Beside id="root"]
	-----------
	
	<!DOCTYPE html>
	<html lang="en">

		<head>
		  <meta charset="utf-8" />
		  <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
		  <meta name="viewport" content="width=device-width, initial-scale=1" />
		  <meta name="theme-color" content="#000000" />
		  <meta name="description" content="Web site created using create-react-app" />
		  <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
		  <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
		  <title>React App</title>
		</head>

		<body>
		  <noscript>You need to enable JavaScript to run this app.</noscript>
		  <div id="root"></div>
		  <div id="portal-root"></div>
		  
		</body>

	</html>
	
	
	
	PortalComponent.js [This Component Will Rendered Inside id="root" Element]
	------------------
	
	import React from 'react'

	function PortalComponent() {
	    return (
		<div>
		    <h1>Portal Demo</h1>
		</div>
	    )
	}

	export default PortalComponent
	
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import PortalComponent from './Components/PortalComponent'

	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<PortalComponent />
	      </div >

	    );
	  }
	}

	export default App;






EX [PortalComponent.js Component Rendered Inside id="portal-root" Element Not Inside id="root"]
----


	index.html
	-----------
	
	<!DOCTYPE html>
	<html lang="en">

		<head>
		  <meta charset="utf-8" />
		  <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
		  <meta name="viewport" content="width=device-width, initial-scale=1" />
		  <meta name="theme-color" content="#000000" />
		  <meta name="description" content="Web site created using create-react-app" />
		  <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
		  <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
		  <title>React App</title>
		</head>

		<body>
		  <noscript>You need to enable JavaScript to run this app.</noscript>
		  <div id="root"></div>
		  <div id="portal-root"></div>
		  
		</body>

	</html>
	
	
	
	PortalComponent.js [This Component Will Rendered Inside id="portal-root" Element]
	------------------
	
	import React from 'react'
	import ReactDOM from 'react-dom'

	function PortalComponent() {
	    // Accept 2 parameters First Is The Rendered Elements And Second Is The Root Element Which I Want To Rendered Inside
	    return ReactDOM.createPortal(

		<div>
		    <h1>Portal Demo</h1>
		</div>
		,
		document.getElementById('portal-root')
	    )
	}

	export default PortalComponent

	
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import PortalComponent from './Components/PortalComponent'

	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<PortalComponent />
	      </div >

	    );
	  }
	}

	export default App;
