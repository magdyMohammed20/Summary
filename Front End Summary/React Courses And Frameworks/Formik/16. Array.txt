(1) If Inside 'initialValues' We Have Property Called 'phone' And It's Array In This Example We Show How To Handle Array With Formik
---------------------------------------------------------------------------------------------------------------------------------------


	Form.js
	--------
	
	import React from 'react'
	import './Form.css'
	import { Formik, Form, Field } from 'formik'

	let initialValues = {
	    phone: ['', '']
	}

	let onSubmit = val => {
	    console.log(`First `, `${val.phone[0]}`)
	    console.log(`Second `, `${val.phone[1]}`)

	}


	export default function FormikForm() {

	    return (
		<Formik
		    initialValues={initialValues}
		    onSubmit={onSubmit}
		>
		    <Form>
		        <div>
		            <label htmlFor="first">First Number</label>
		            <Field
		                type="text"
		                name="phone[0]"
		                id="first"
		            />
		        </div>

		        <div>
		            <label htmlFor="second">Second Number</label>
		            <Field
		                type="text"
		                name="phone[1]"
		                id="second"
		            />
		        </div>

		        <button type="submit">Submit</button>
		    </Form>
		</Formik>
	    )
	}
	
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import FormikForm from './Components/Form'
	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<FormikForm />
	      </div >

	    );
	  }
	}

	export default App;




(2) Array Validation
----------------------


	Form.js
	---------
	
	import React from 'react'
	import './Form.css'
	import { Formik, Form, Field, ErrorMessage } from 'formik'
	import * as Yup from 'yup'
	let initialValues = {
	    phone: ['', '']
	}

	let onSubmit = val => {
	    console.log(`First `, `${val.phone[0]}`)
	    console.log(`Second `, `${val.phone[1]}`)

	}


	let validationSchema = Yup.object().shape({
	    phone: Yup.array().of(
		Yup.string().required('Please Enter All Phones')
	    )
	})

	export default function FormikForm() {

	    return (
		<Formik
		    initialValues={initialValues}
		    onSubmit={onSubmit}
		    validationSchema={validationSchema}
		>
		    <Form>
		        <div>
		            <label htmlFor="first">First Number</label>
		            <Field
		                type="text"
		                name="phone[0]"
		                id="first"
		            />
		            <ErrorMessage name="phone[0]" />
		        </div>

		        <div>
		            <label htmlFor="second">Second Number</label>
		            <Field
		                type="text"
		                name="phone[1]"
		                id="second"
		            />
		            <ErrorMessage name="phone[1]" />
		        </div>

		        <button type="submit">Submit</button>
		    </Form>
		</Formik>
	    )
	}
	
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import FormikForm from './Components/Form'
	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<FormikForm />
	      </div >

	    );
	  }
	}

	export default App;

