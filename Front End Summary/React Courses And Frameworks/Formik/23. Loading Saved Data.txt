(1) If We Have Data And Want To Load It In The Form [Replace 'initialValues' Object With Other Object That Have Some Data To Load]


EX
---


	Form.js
	-----------
	
	import React, { useState } from 'react' // First Step Is Import 'useState'
	import './Form.css'
	import { Formik, Form, Field, ErrorMessage } from 'formik'
	import * as Yup from 'yup'

	let initialValues = { name: '', email: '', channel: '' }

	// Second Step Is Create The Saved Data That I Want To Load It Into The Form
	let savedData = {
	    name: 'Magdy',
	    email: 'magdy@yahoo.com',
	    channel: 'Elzero'
	}

	let onSubmit = (val, onSubmitProps) => {
	    console.log(`Name Is `, `${val.name}`)
	    console.log(`Email Is `, `${val.email}`)
	    console.log(`Channel Is `, `${val.channel}`)
	}


	let validationSchema = Yup.object({
	    name: Yup.string().required('Name Is Required'),
	    email: Yup.string().email('Invalid Email Format').required('Email Is Required'),
	    channel: Yup.string().required('Channel Is Required')
	})
	export default function FormikForm() {

	    // Third Step Is Initialize 'useState' With 'initialValues' Object
	    const [values, setValues] = useState(initialValues)

	    return (
		// Fourth Step Is Pass 'values' To 'initialValues'
		// Fifth Step Is To Set 'enableReinitialize' As Prop To 'Formik' Component [Note: Data Not Loaded Without This Property]
		<Formik
		    initialValues={values}
		    onSubmit={onSubmit}
		    validationSchema={validationSchema}
		    enableReinitialize
		>
		    {
		        formik => {
		            return (
		                <Form>
		                    <div>
		                        <label htmlFor="name">Name</label>
		                        <Field
		                            type="text"
		                            name="name"
		                            id="name"
		                        />
		                        <div style={{ color: 'red' }}>
		                            <ErrorMessage name="name" />
		                        </div>
		                    </div>
		                    <div>
		                        <label htmlFor="email">Email</label>
		                        <Field
		                            type="email"
		                            name="email"
		                            id="email"
		                        />
		                        <div style={{ color: 'red' }}>
		                            <ErrorMessage name="email" />
		                        </div>
		                    </div>
		                    <div>
		                        <label htmlFor="channel">Channel</label>
		                        <Field
		                            type="text"
		                            name="channel"
		                            id="channel"
		                        />
		                        <div style={{ color: 'red' }}>
		                            <ErrorMessage name="channel" />
		                        </div>
		                    </div>
		                    {/* Sixth Step Is To Create Button That Replace The 'initialValues' With The Saved Data */}
		                    <button type="button" onClick={() => setValues(savedData)}>Load</button>
		                    <button type="submit">Submit</button>
		                </Form>
		            )
		        }
		    }
		</Formik>
	    )
	}
	
	
	
	App.js
	---------
	
	import React, { Component } from 'react';
	import './App.css';
	import FormikForm from './Components/Form'
	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<FormikForm />
	      </div >

	    );
	  }
	}

	export default App;

