(1) In Previous Folder We Create insert,update,delete,select data From Mongo But With Controller We Can Away Schema And Database Away From Routing And Other Things

(2) Steps To Create Controller
-------------------------------
==> Inside Project Folder Create Another Folder Called 'Controller' And Create 'user_controller.js' In It
==> Move The Callback Functions Of Each Router That Created In [index.js] Of update,select,delete,insert And Create It As Function In 'user_controller.js' And Export It Then Import It In [index.js] And Pass Functions To Each Router


EX
----

    controller/user_controller.js
    -------------------------------

    var User = require('../model/user')

    const insert = (req, res, next) => {

        const user = new User({
            userName: req.body.userName,
            userEmail: req.body.userEmail
        })

        user.save((err, result) => {
            if (err) {
                console.log('Error!!')
                res.redirect('/')
                return
            }
            console.log(result)
            res.redirect('/getusers')
        })

    }


    const getUsers = (req, res, next) => {

        User.find({}, (err, result) => {
            if (err) {
                console.log(err)
                redirect('/')
                return
            }
            console.log(result)
            res.render('index', { items: result })
        })
    }

    const update = (req, res, next) => {
        const ID = req.body.id;
        const updatedData = {
            userName: req.body.new_user_name,
            userEmail: req.body.new_user_email
        }

        User.updateOne({ _id: ID }, { $set: updatedData }, (err, result) => {
            if (err) {
                console.log('Error While Updating Date!!')
                res.redirect('/')
                return
            }
            // Shows Number Of Modified
            console.log(result)
            // After Updating Redirect Me To 'getusers' Page To Display The Changes
            res.redirect('/getusers')
        })
    }


    const deleteUser = (req, res, next) => {

        const ID = req.body.id
        User.deleteOne({ _id: ID }, (err, result) => {
            if (err) {
                console.log('Error While Deleteing')
                res.redirect('/')
                return
            }
            console.log(result)
            console.log('User Deleted Successfully')
            res.redirect('/getusers')
        })
    }
    module.exports = {
        insert,
        getUsers,
        update,
        deleteUser
    }


    index.js
    ----------

    var express = require('express');
    var router = express.Router();

    // Import Controller
    var Controller = require('../controller/user_controller')

    router.get('/', function (req, res, next) {
        res.render('index', { title: 'Express' });
    });

    // Pass Functions To Each Router Using 'Controller' Variable
    router.post('/insert', Controller.insert)
    router.get('/getusers', Controller.getUsers)
    router.post('/update', Controller.update)
    router.post('/delete', Controller.deleteUser)


    module.exports = router;