(1) Nullish coalescing operator [??]
------------------------------------
==> provides a short syntax for selecting a first “defined” variable.
==> The result of a ?? b is:

    a if it’s not null or undefined,
    b, otherwise.

==> So, x = a ?? b is a short equivalent to: x = (a !== null && a !== undefined) ? a : b;


EX1
---------

	const fName = 'Magdy',
	      lName = 'Mohammed',
	      neckName = 'Mego'

	let res = fName ?? lName ?? neckName ?? 'Other'
	console.log(res) // Magdy


EX2
--------

	const fName = null,
	    lName = 'Mohammed',
	    neckName = 'Mego'

	let res = fName ?? lName ?? neckName ?? 'Other'
	console.log(res) // Mohammed


EX3
--------

	const fName = null,
	    lName = undefined,
	    neckName = 'Mego'

	let res = fName ?? lName ?? neckName ?? 'Other'
	console.log(res) // Mego



(2) Different Between || And ??
-------------------------------
==> ?? Very similar to || operator. Actually, we can replace ?? with || in the code above and get the same result
==> The important difference is that || returns the first truthy value But ?? returns the first defined value.


EX1 (0 With || Treats As Falsy Value But With ?? Treats As Defined Value)
-------------------------------------------------------------------------

	const height = 0

	console.log(height || 100) // 100
	console.log(height ?? 100) // 0


