(1) The window.location object manages the address loaded by the browser. Manipulating the location object is how you manage page redirects using JavaScript. The location object has properties and methods to trigger a JavaScript page redirect.


(2) The location object methods are
------------------------------------
==> assign: sets the location object to the new URL
==> reload: forces the page to reload using the same URL
==> replace: triggers a redirect, which we will explore in depth
==> search: allows you to interrogate the queryString


(3) assign And reload Methods
------------------------------
==> Assign and replace look similar, but have a different constraints. The assign method loads the resource at the new URL and preserves the previous entry in the browser's navigation history. This means the user can hit the back button and go to the original page.


==> The replace method same As Assign Method, except the original or 'current' resource is not retained in the browser's history. This means the user cannot hit the back button to go to the original page


==> Assign And replace Methods may fail if there are security restrictions. For example, third party scripts cannot trigger a redirect. This is a good thing because so many sites use third party scripts without verifying their code


(4) assign Method
------------------
	
	// Syntax
	window.location.assign("new target URL")
	
	// Redirect To Google And Can Back To The Original Page By Back Button
	window.location.assign("www.google.com")
	
	
(5) replace Method
-------------------
	
	// Syntax
	window.location.replace("new target URL")
	
	// Redirect To Google And Can't Back To The Original Page By Back Button
	window.location.assign("www.google.com")
	
	
(6) reload Method
------------------
==> The location.reload method reloads the current document, just like the user pressed F5 or the browser reload button.

==> The default setting reloads the page from browser cache, if it is available. You can force the method to bypass local cache and retrieve the document from the network by passing true to the method


EX:
----

	location.reload();  //refreshes from cache

	//or

	location.reload(true); //to force a network request


https://love2dev.com/blog/ways-to-use-javascript-redirect-to-another-page/
