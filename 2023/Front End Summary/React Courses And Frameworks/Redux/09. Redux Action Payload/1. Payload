(1) Passing Argument To Redux Action When Action Executed
-----------------------------------------------------------

// Action Types
export const BUY_CAKE = 'BUY_CAKE'

// Action Creator
import { BUY_CAKE } from './ActionTypes'

export const Buy_Cake = (num) => {
    return {
        type: BUY_CAKE,
        num
    }
}

// Reducer
import { BUY_CAKE } from './ActionTypes'

const initialState = {
    numOfCakes: 10
}

const CakeReducer = (state = initialState, Action) => {
    switch (Action.type) {
        case BUY_CAKE:
            return {
                ...state,
                numOfCakes: state.numOfCakes === 0 ? 0 : state.numOfCakes - Action.num
            }


        default: return state
    }
}

export default CakeReducer


// index.js
export {Buy_Cake} from './CakeActions'


// store.js
import { createStore } from 'redux'
import CakeReducer from './CakeReducer'

const Store = createStore(CakeReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())

export default Store



// Cakes.js
import React, { useState } from 'react';
import { Buy_Cake } from '../Redux/index'
import { useSelector, useDispatch } from 'react-redux'

const Cakes = props => {
    const numOfCakes = useSelector(state => state.numOfCakes)
    const dispatch = useDispatch()
    const [num, setNum] = useState(1)
    return (
        <div>
            <input type="text" value={num} onChange={e => setNum(+e.target.value)} />
            <h1>Current Number Of Cakes: {numOfCakes}</h1>
            <button onClick={() => dispatch(Buy_Cake(num))}>Buy Cake</button>
        </div>
    );
};


export default Cakes;



// App.js
import React from 'react';
import './App.css';
import {Provider} from 'react-redux'
import Cakes from './Components/Cakes'
import Store from './Redux/Store'

function App() {
  return (
    <div className="App">
      <Provider store={Store}>
        <div>
          <Cakes/>
        </div>
      </Provider>
    </div>
  );
}

export default App;

