// Fetching Data From Api By Using useState Or useReducer



(1) 'useState' Fetching
------------------------

	import React, { useState, useEffect } from 'react';
	import axios from 'axios'

	function App() {

	  const [loading, setLoading] = useState(true)
	  const [error, setError] = useState('')
	  const [post, setPost] = useState({})

	  useEffect(() => {
	    axios.get('https://jsonplaceholder.typicode.com/posts/1')
	      .then(response => {
		setLoading(false)
		setError('')
		setPost(response.data)
	      })
	      .catch(error => {
		setLoading(false)
		setError('Error Occured')
		setPost({})
	      })
	  }, [])

	  return (
	    <div className="App">
	      {loading ? 'Loading' : post.title}
	      {error ? error : null}
	    </div>
	  );
	}

	export default App;



(2) 'useReducer' Fetching
--------------------------

	import React, { useReducer, useEffect } from 'react';
	import axios from 'axios'

	const initialState = {
	    loading: true,
	    error: '',
	    post: {}
	}

	const reducer = (state, action) => {
	    switch (action.type) {
		case 'SUCCESS_FETCH':
		    return {
		        loading: false,
		        error: null,
		        post: action.payload
		    }

		case 'ERROR_FETCH':
		    return {
		        loading: false,
		        error: 'Something Wrong',
		        post: {}
		    }

		default: return state
	    }
	}
	const CompA = () => {

	    const [state, dispatch] = useReducer(reducer, initialState)

	    useEffect(() => {
		axios.get('https://jsonplaceholder.typicode.com/posts/1')
		    .then(response => {
		        dispatch({ type: 'SUCCESS_FETCH', payload: response.data })
		    })
		    .catch(error => {
		        dispatch({ type: 'ERROR_FETCH' })
		    })
	    }, [])

	    return (
		<div>
		    {state.loading ? 'Loading...' : state.post.title}
		    {state.error ? state.error : null}
		</div>
	    );
	};

	export default CompA;

