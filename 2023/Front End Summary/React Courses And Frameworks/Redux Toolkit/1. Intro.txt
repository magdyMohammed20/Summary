(1) Why Use Redux Toolkit [Come To Solve This 3 Problems]
-------------------------
==> Configuring a Redux store is too complicated
==> I have to add a lot of packages to get Redux to do anything useful
==> Redux requires too much boilerplate code

Note: In Previous Redux Version We Install [redux , react-redux] With Toolkit Version We Don't Need To Install [redux]
Note: Redux Toolkit Uses 'Immer' Lib To Prevent State Mutation

(2) Installation [We Don't Need To Install 'redux' Lib]
-------------------
==> npm install @reduxjs/toolkit react-redux


(3) Step1
-----------

    store/index.js
    ----------------

    // 1- Import CreateSlice
    import { createSlice } from '@reduxjs/toolkit'

    // 2- Initalize State
    const initState = { counter: 0, showHide: true }

    // 3- Initialize counterSlice
    const counterSlice = createSlice({
        name: "counter",
        initialState: initState,
        reducers: {
            increment: (state , action) => { state.counter += 1 },
            decrement: (state , action) => { state.counter -= 1 }
        }
    })

(4) Step2
-----------

    store/index.js
    ----------------

    // 4- Import createStore From Toolkit
    import { createSlice, createStore } from "@reduxjs/toolkit";

    // 5- Pass Reducer To Create Store
    const store = createStore(counterSlice.reducer)


(5) Step3
-----------

    store/index.js
    ---------------

    // 6- Extract Actions From Slice And Export To Use In Counter Component
    export const { increment, decrement } = counterSlice.actions


(6) Step4 (Handle Counter Component)
----------

    Components/counter.js
    ----------------------

    import React from 'react'
    import { useSelector, useDispatch } from 'react-redux'
    import { increment, decrement } from '../store/index'

    function Counter() {
        const state = useSelector(state => state)
        const dispatch = useDispatch()

        return (
            <div>
                <h1 className='m-4 h1'>Counter: {state.counter}</h1>
                <button onClick={() => dispatch(increment())}>+</button>
                <button onClick={() => dispatch(decrement())}> - </button>
            </div>
        )
    }

    export default Counter


(7) Step5 (Handle App.js)
------------

    import Counter from "./components/Counter";
    import { Provider } from 'react-redux'
    import store from './store/index'
    function App() {

        return (
            <div className="App bg-black">
                <Provider store={store}>
                    <Counter />
                </Provider>
            </div>
        );
    }

    export default App;


(8) Use Payload
----------------

    store/index.js
    ---------------

    const counterSlice = createSlice({
        name: "counter",
        initialState: initState,
        reducers: {
            increment: (state, action) => { state.counter += action.payload },
            decrement: (state, action) => { state.counter -= action.payload }
        }
    })


    components/counter.js
    ----------------------

    return (
        <div>
            <h1 className='m-4 h1'>Counter: {state.counter}</h1>
            <button onClick={() => dispatch(increment(5))}>+</button>
            <button onClick={() => dispatch(decrement(5))}> - </button>
        </div>
    )