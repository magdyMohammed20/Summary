(1) Steps To Use Context
-------------------------
==> Create The Context 
==> Provide A Context Value
==> Consume The Context Value


(2) Example Here Depending On The Tree In The Previous File [01.intro]
----------------------------------------------------------------------

==> Create All Required Components
-----------------------------------

	A.js
	-----
	
	import React from 'react'

	export default function A() {
	    return (
		<div>
		    A
		</div>
	    )
	}
	
	
	B.js
	-----
	
	import React from 'react'
	import D from './D'

	export default function B() {
	    return (
		<div>
		    B With
		    <D />
		</div>
	    )
	}
	
	
	C.js
	-----
	
	import React from 'react'
	import E from './E'
	export default function C() {
	    return (
		<div>
		    C With <E />
		</div>
	    )
	}
	
	
	D.js
	-----
	
	import React from 'react'

	export default function D() {
	    return (
		<span style={{ color: 'red', marginLeft: '5px' }}>
		    D
		</span>
	    )
	}
	
	
	
	E.js
	-----
	
	import React from 'react'
	import F from './F'
	export default function E() {
	    return (
		<span>
		    E With <F />
		</span>
	    )
	}
	
	
	F.js
	-----
	
	import React from 'react'

	export default function F() {
	    return (
		<span style={{ color: 'red', marginLeft: '5px' }}>
		    F
		</span>
	    )
	}
	
	
	App.js
	-------
	
	import React from 'react';
	import './App.css';
	import A from './Components/A'
	import B from './Components/B'
	import C from './Components/C'

	function App() {
	  return (
	    <div className="App">
	      <A />
	      <B />
	      <C />
	    </div>

	  );
	}

	export default App;



==> Create Component Called 'userContext.js' Inside 'Components' Folder
-----------------------------------------------------------------------

	
	userContext.js
	---------------
	
	import React from 'react'

	const userContext = React.createContext()

	// Give Names For Readability
	const userProvider = userContext.Provider
	const userConsumer = userContext.Consumer


	export { userProvider, userConsumer }
	
	
	
==> Call The 'userContext.js' Inside 'App.js' And Use The Provider For Passing The 'userName' To Children Components
---------------------------------------------------------------------------------------------------------------------

	App.js
	-------
	
	import React from 'react';
	import './App.css';
	import A from './Components/A'
	import B from './Components/B'
	import C from './Components/C'
	import { UserProvider } from './Components/userContext'

	function App() {
	  return (
	    <div className="App">
	      <UserProvider value="Magdy Mohammed">
		<A />
		<B />
		<C />
	      </UserProvider>
	    </div>

	  );
	}

	export default App;



==> Use The Consumer To Access 'userName' Value Inside Any Children Component Of Any Component That Called In App.js
---------------------------------------------------------------------------------------------------------------------


	F.js [F Is Child Of E And E Is Child Of C That Called In App.js]
	------
	
	import React from 'react'
	import { UserConsumer } from './userContext'

	export default function F() {
	    return (
		<UserConsumer>
		    {
		        (userName) => {
		            return <div>F: {userName}</div>
		        }
		    }
		</UserConsumer>
	    )
	}

	
