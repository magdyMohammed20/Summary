(1) In The Previous Validation Files There Are 2 Ways To Create Validation First Is Passing Custom Validation Function To Formik 'validate' Prop And Second Is Specify Yup Object Schema Using 'validationSchema' Prop 

(2) Formik Allows To Create And Pass Validation Function At Field Level



EX (In This Sample We Create Validation Function For 'name' Only)
---


	Form.js
	--------
	
	import React from 'react'
	import './Form.css'
	import { Formik, Form, Field, ErrorMessage } from 'formik'

	let initialValues = { name: '' }

	let onSubmit = val => {
	    console.log(`Name Is `, `${val.name}`)
	}

	// First Step Is Create Validation Function
	let validateName = value => {
	    let error;

	    if (!value) {
		error = 'Required'
	    }

	    return error
	}


	export default function FormikForm() {
	    return (
		<Formik
		    initialValues={initialValues}
		    onSubmit={onSubmit}
		>
		    <Form>
		        <div>
		            <label htmlFor="name">Name</label>
		            {/* Second Step Is Pass Validation Function To Field validate Prop */}
		            <Field
		                type="text"
		                name="name"
		                id="name"
		                validate={validateName}
		            />
		            {/* Third Step Is Create ErrorMessage To Display The Validation Error */}
		            <div style={{ color: 'red' }}>
		                <ErrorMessage name="name" />
		            </div>
		        </div>

		        <button type="submit">Submit</button>
		    </Form>
		</Formik>
	    )
	}
	
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import FormikForm from './Components/Form'
	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<FormikForm />
	      </div >

	    );
	  }
	}

	export default App;

