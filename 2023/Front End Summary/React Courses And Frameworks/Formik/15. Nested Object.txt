(1) If In Formik 'initialValues' Object We Have Social Links And It's Grouped Under Property Called 'social' How To Deal Within The Form
----------------------------------------------------------------------------------------------------------------------------------------


	Form.js
	---------
	
	import React from 'react'
	import './Form.css'
	import { Formik, Form, Field } from 'formik'

	let initialValues = {
	    social: {
		facebook: '',
		twitter: ''
	    }
	}

	let onSubmit = val => {
	    console.log(`Facebook Is `, `${val.social.facebook}`)
	    console.log(`Twitter Is `, `${val.social.twitter}`)

	}


	export default function FormikForm() {

	    return (
		<Formik
		    initialValues={initialValues}
		    onSubmit={onSubmit}
		>
		    <Form>
		        <div>
		            <label htmlFor="facebook">Facebook URL</label>
		            <Field
		                type="text"
		                name="social.facebook"
		                id="facebook"
		            />
		        </div>

		        <div>
		            <label htmlFor="twitter">Twitter URL</label>
		            <Field
		                type="text"
		                name="social.twitter"
		                id="twitter"
		            />
		        </div>

		        <button type="submit">Submit</button>
		    </Form>
		</Formik>
	    )
	}
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import FormikForm from './Components/Form'
	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<FormikForm />
	      </div >

	    );
	  }
	}

	export default App;




(2) Nested Object With Validation
------------------------------------


	Form.js
	--------
	
	import React from 'react'
	import './Form.css'
	import { Formik, Form, Field, ErrorMessage } from 'formik'
	import * as Yup from 'yup'

	let initialValues = {
	    social: {
		facebook: '',
		twitter: ''
	    }
	}

	let onSubmit = val => {
	    console.log(`Facebook Is `, `${val.social.facebook}`)
	    console.log(`Twitter Is `, `${val.social.twitter}`)

	}

	let validationSchema = Yup.object().shape({
	    social: Yup.object().shape({
		facebook: Yup.string().required('Please Enter Facebook'),
		twitter: Yup.string().required('Please Enter Twitter')
	    })
	})

	export default function FormikForm() {

	    return (
		<Formik
		    initialValues={initialValues}
		    onSubmit={onSubmit}
		    validationSchema={validationSchema}
		>
		    <Form>
		        <div>
		            <label htmlFor="facebook">Facebook URL</label>
		            <Field
		                type="text"
		                name="social.facebook"
		                id="facebook"
		            />
		            <ErrorMessage name='social.facebook' />
		        </div>

		        <div>
		            <label htmlFor="twitter">Twitter URL</label>
		            <Field
		                type="text"
		                name="social.twitter"
		                id="twitter"
		            />
		            <ErrorMessage name='social.twitter' />
		        </div>

		        <button type="submit">Submit</button>
		    </Form>
		</Formik>
	    )
	}
	
	
	App.js
	--------
	
	import React, { Component } from 'react';
	import './App.css';
	import FormikForm from './Components/Form'
	class App extends Component {

	  render() {

	    return (
	      <div className="App">
		<FormikForm />
	      </div >

	    );
	  }
	}

	export default App;

