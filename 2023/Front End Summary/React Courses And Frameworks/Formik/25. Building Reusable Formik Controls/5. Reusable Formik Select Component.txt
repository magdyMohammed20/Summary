(1) Create Resusable Select Component
---------------------------------------


	// Create [Select.js] Component
	import React from 'react'
	import { Field, ErrorMessage } from 'formik'
	import TextError from './TextError'

	function Select(props) {
    		const {label , name , options, ...rest} = props
    		return (
        		<div className='form-control'>
            			<label htmlFor={name}>{name}</label>
            			<Field as='select' name={name} id={name} {...rest}>
                			{
                    				options.map(option => {
                        				return (
                            					<option key={option.value} value={option.value}>
                                					{option.key}
                            					</option>
                        				)
                    				})
                			}
            			</Field>
            			<ErrorMessage name={name} component={TextError}/>
        		</div>
    			)
	}

	export default Select

	
	// Handle Select In [FormikControl.js]
	import React from 'react'
	import Input from './Input'
	import Textarea from './Textarea'
	import Select from './Select'

	function FormikControl(props) {
    		const {control , ...rest} = props

    		switch(control){
        		case 'input' : 
            			return <Input {...rest}/>
        		case 'textarea':
            			return <Textarea {...rest}/>
        		case 'select' : 
            			return <Select {...rest}/>
        		case 'radio':
        		case 'checkbox':
        		case 'date':
        		default: return null
    		}
	}

	export default FormikControl


	// Handle Select Validation In [FormikContainer.js]
	import React from 'react'
	import {Formik , Form} from 'formik'
	import * as Yup from 'yup'
	import FormikControl from './FormikControl'

	export default function FormContainer() {
    		// Create Select Options As Array
    		const selectOptions = [
        		{key : 'Select An Option' , value: ''},
        		{key : 'key1' , value: 'Option1'},
        		{key : 'Key2' , value: 'Option2'},
        		{key : 'Key3' , value: 'Option3'}
    		]

    		const initialValues = {
        		email : '',
        		description: '',
        		selectOption: ''
    		}

    		const validationSchema = Yup.object({
        		email: Yup.string().required('Required Email'),
        		description: Yup.string().required('Please Enter Desc'),
        		selectOption: Yup.string().required('Please Enter Selection'),
    		})

    		const onSubmit = values => {
        		console.log('Form Data Is ' , values)
    		}

    		return (
       			<div>
            			<Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>
                		{
                    			formik => <Form>
                        			<FormikControl control='input' type='email' label='email' name='email'/>
                        			<FormikControl control='textarea' label='Description' name='description'/>
						<FormikControl control='select' label='select' name='selectOption' options={selectOptions}/>
                        <button type='submit'>Submit</button>
                    </Form>
                }
            </Formik>        
        </div>
    )
}
