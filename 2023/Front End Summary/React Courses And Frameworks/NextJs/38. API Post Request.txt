(1) Create POST Request Using NextJs API Route
------------------------------------------------
==> Handle Input Field And Button In '/pages/comments/index.js'
==> Handle POST Request In '/pages/api/comments/index.js'

    /pages/comments/index.js
    -------------------------

    import { useState } from "react"
    export default function Comments() {

        const [comments, setComments] = useState([])
        const [comment, setComment] = useState([])

        const loadComments = async () => {
            const data = await fetch('/api/comments')
            const response = await data.json()
            await setComments(response)

        }

        const handleCommentSubmit = async () => {
            const response = await fetch('/api/comments', {
                method: 'POST',
                body: JSON.stringify({ comment }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            const data = await response.json()
            console.log(data)
        }

        return (
            <div>

                <input type='text' value={comment} onChange={e => setComment(e.target.value)} />

                <button onClick={handleCommentSubmit}>Submit Comment</button>
                <button onClick={loadComments}>Load Comments</button>
                {
                    comments.map(comment => <div key={comment.id}>
                        <p>{comment.id} - {comment.text}</p>
                    </div>)
                }
            </div>
        )
    }

    /pages/api/comments/index.js
    -----------------------------

    import { comments } from "../../../data/comments";

    export default function handler(req, res) {

        if (req.method === 'GET') {
            res.status(200).json(comments)
        }

        else if (req.method === 'POST') {
            const comment = req.body.comment;

            const newComment = {
                id: Math.random(),
                text: comment
            }

            comments.push(newComment)
            res.status(201).json(newComment)
        }
    }