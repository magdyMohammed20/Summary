(1) Eslint
-----------
==> tool for identifying and reporting on patterns found in ECMAScript/JavaScript code, with the goal of making code more consistent and avoiding bugs. In many ways, it is similar to JSLint and JSHint with a few exceptions
-> ESLint uses Espree for JavaScript parsing.
-> ESLint uses an AST to evaluate patterns in code.
-> ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.

(2) Why Eslint
-----------------
==> Improve Code Quality [All Code Has Same Standards]
==> Minimize Code Review Time
==> Can Edit In Eslint Configuration In Any Time


(3) Steps Of Install And Configure Eslint In Project
-----------------------------------------------------
==> [npm i --save-dev eslint] Or [npm i -D eslint]

==> Set Eslint Script In [Package.json] And The Start Point Folder 

    "scripts" : {
        "lint": "eslint ./src"
    }
    
==> For Run The Script Write [npm run lint] But Must Create Configuration File Before Run
    So We Write [npm run lint -- --init] For Create The Configuration File And Will Answer Some Questions Then Automatically Will Create [.eslintrc] File In Project
    Then Write [npm run lint] In CMD And Will Get The Eslint Rules Errors That We Set It

==> Set Rules Of Code Inside [.eslintrc] File

    "rules": {
        "quotes": ["error", "double" ] // Generate Error If Not Use Double Quotes With Strings
    }

==> But You Will Take More Time To Fix All Errors So We Edit The Script In [Package.json]
    By Adding '--fix' For Fix Most Common Errors Automatic Then Run [npm run lint] You Will Note That Most Common Errors Is Fixed Without You

    "scripts" : {
        "lint": "eslint ./src --fix"
    }


(4) Connect Eslint With VScode
-------------------------------
==> Setup 'eslint' Extension In VScode
==> Then Remove '--fix' From Lint Scripts In [Package.json]
==> Then Run [npm run lint] And If Go To Any File And Open Problems Tab In VScode You Will Get All Errors And Can Fix It
    By Double Click On Any Problem And Will Get Bulb Icon And Choose Fix [All Auto Fixable Problems] And Will Fix All Problems In This File
==> For Fix All Errors Write [npm run lint -- --fix] In CMD


(5) Searching For How To Set Rules In [.eslintrc] File
---------------------------------------------------------
==> Go To [eslint] Website And Search For 'no var' 

    "rules" : {
        "no-var": [ "error" ]
    }

==> "error" Can Replaced With "warn" 


(6) Use Popular Style Guides With Eslint 
------------------------------------------
==> Sure That You Delete [.eslintrc] File

==> Set Lint Script In [Package.json]

    "scripts" : {
        "lint": "eslint ./src"
    }

==> Create New Configuration File And Answer Questions [npm run lint -- --init] But When Question Is "How Would You Like To Define A Style For Your Project ? " Select "Use Popular Style Guide"
    And Select "Airbnb" And Will Install Packages And [.eslintrc] Created Automatic And Note That In [.eslintrc] Extends Airbnb Style Guide Then Write [npm run lint] And Will Get All Errors Depending On Airbnb Standards
    And Can Write [npm run lint -- --fix] For Fix All Errors Depending On Airbnb Style Guide

==> For Disable Eslint Error Fixing In Specific Line Write [//eslint-disable-line] At End Of This Line