no-console : Prevent Use Of Console Statement
no-constant-condition: Prevent Consttants Conditions [EX: if(true) Or ]
no-dupe-args : Prevent Function Args Duplication
no-dupe-else-if: Prevent Duplication Of Specific Condition (EX: Write Same Condition More Than 1 Time)
no-dupe-keys: Prevent Duplication Of Object Keys
no-duplicate-case: Prevent Duplication Of Switch Cases
no-empty: Prevent Use Of Empty Blocks With Functions Or If Or Switch ...
no-func-assign: disallows reassigning function declarations.
no-import-assign: warns the assignments, increments, and decrements of imported bindings.
no-inner-declarations: disallows Declare Function Or Variables Inside Blocks
no-sparse-arrays: disallows Create Holes In Array [EX: let x = [1,,3]]
no-template-curly-in-string: Warn For Use `` Instead Of "" Or ''
use-isnan: Prevent Use Of isNaN
default-case: Must Write Default Case In Switch Statements
default-case-last: Must Set Default Case Must Be Last Case In Switch Statement
default-param-last: Must Set Function Default Params As Last Argument 
dot-notation: Must Use Dot Notation In Access Object Props Instead Of square-bracket notation
eqeqeq : Must Use === Instead Of == 
no-alert: Prevent Use 'alert' In Your Code
no-case-declarations: Prevent Variables Declarations Inside Switch Cases
no-empty-function: Prevent Write Empty Function
no-lone-blocks: Prevent Use Unnecessary Blocks
no-magic-numbers: 'Magic numbers' are numbers that occur multiple times in code without an explicit meaning. They should preferably be replaced by named constants.
no-multi-spaces: Prevent Make Unnecessary Spaces In Code
no-multi-str: Prevent Use Multi Line String But Can Use + Or `` Instead
no-param-reassign: Prevent Assign Value To Function Parameter
no-redeclare: Prevent Variable Or Function redeclare
no-return-assign: Prevent Use assignment Operator With Return
vars-on-top: Must Move Variables Declared With 'var' To Top Of Document
yoda: Must Set The Variable On Left Side And Value To Compare On Right Side In Conditions
init-declarations: Must Initialize Variable When Declared It [Bad: var x;] [Good: var x = 10;]
no-unused-vars: Must Use The Variable After Declared It
camelcase: Must Write Any Variable With camelCase Pattern When variable Consist Of More Than 1 Word
capitalized-comments: Comment Must Begin With Capital Character
id-denylist: Specify Collection Of Words To Not Used With Identifiers
id-length: Set Minimum And Maximum Length Of Any Identifier
indent: Set Code Indent Number 
max-depth: Set Number Of Allowed Nested Blocks
max-len: Set Maximum Length Of Line In Document
max-lines: Set Maximum Lines Must File Have
max-lines-per-function: Set Maximum Lines Must Function Have
max-params: Set Maximum Length Of Function Parameters
max-statements : Set Maximum Length Of Statements In Function Block
max-statements-per-line: Set a maximum number of statements allowed per line
multiline-comment-style
no-bitwise
no-continue
no-inline-comments
no-lonely-if
no-mixed-operators
no-mixed-spaces-and-tabs
no-multi-assign
no-multiple-empty-lines
no-negated-condition
no-nested-ternary
no-plusplus
no-tabs
no-ternary
no-underscore-dangle
one-var
one-var-declaration-per-line
quotes
semi
sort-keys
sort-vars
spaced-comment
arrow-body-style
no-const-assign
no-var
object-shorthand
prefer-const
prefer-destructuring