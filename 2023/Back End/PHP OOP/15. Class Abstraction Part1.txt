(1) Class Abstraction
-----------------------
==> Is Class That Set Basic Rules Of Properties And Methods Only And Not Contains Any Functionality Or Complex Code
==> Is Class That Can't Be Instantiated [Can't Create Object From]
==> Made For Other Class To Inherit Properties & Methods From 
==> Can Have Methods And Properties

EX
---

    <?php

        // This Is Called 'Abstraction Class' That Contains The Template Of Props And Methods
        abstract class makeDevice{
            public $num;

            public function getNum(){
                echo 'Get Number';
            }
        }

        // This Class Will Inherit All 'makeDevice' Properties And Methods
        class appleDevice extends makeDevice{}

        $iPhone = new appleDevice();

        print_r($iPhone); // appleDevice Object ( [num] => )

        $iPhone->getNum(); // Get Number

    ?>


(2) Method That Inside The Class Can Be Abstract Too But If Declare The Abstract Function You Must Redeclare It Inside The Child Class
---------------------------------------------------------------------------------------------------------------------------------------
==> Abstract Method Contains No Body But Can Accept Arguments

EX
---

    <?php

        // This Is Called 'Abstract Class' That Contains The Template Of Props And Methods
        abstract class makeDevice{
            public $num;

            // This Is Called 'Abstract Method' And Must Be Empty And Don't Contains Body
            // And Must Redeclare It In Child Class For Prevent Errors
            abstract public function getNum();
        }

        // This Class Will Inherit All 'makeDevice' Class Properties And Methods
        class appleDevice extends makeDevice{} // Fatal error: Class appleDevice contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (makeDevice::getNum) in C:\Xampp\htdocs\php_Elzero\index.php on line 12

        $iPhone = new appleDevice();


    ?>