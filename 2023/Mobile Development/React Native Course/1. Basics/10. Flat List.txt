(1) ScrollView
---------------
==> Isn't Great With The List We Don't Know Size Of It

(2) Flat List
--------------
==> Used With The List That Have Infinite Items


EX: (With 'Key' Property)
----

    import React , {useState} from 'react';
    import { StyleSheet, Text, View , Button, TextInput , ScrollView, FlatList} from 'react-native';

    export default function App() {

        const [enteredGoal , setEnteredGoal] = useState('')
        const [goals , setGoals] = useState([])

        const handleEnteredGoals = enteredGoal => {
            setEnteredGoal(enteredGoal)
        }

        const addGoalHandler = () => {
            if(enteredGoal){
                // Make Entered Goal Here As Object To Use Key In Showing Items
                // React Native Handle Key By Default Inside FlatList
                setGoals(currentGoals => [...currentGoals , {key : Math.random().toString() , value: enteredGoal}])
                setEnteredGoal('')
            }
        }


        return (
            <View>
                <View style={styles.mainContainer}>
                    <TextInput 
                    placeholder="Enter Goal Here"  
                    style={styles.textInput}
                    onChangeText={handleEnteredGoals}
                    value={enteredGoal}
                    />
                    <Button title="Add" onPress={addGoalHandler} />
                </View>
                <FlatList 
                    style={styles.show}
                    data={goals} 
                    renderItem={
                    itemData => 
                        <View style={styles.listItems}>
                        <View>
                            <Text>{itemData.item.value}</Text>
                        </View>
                        </View> 
                    }
                />

            </View>
        );
    }

    const styles = StyleSheet.create({
        mainContainer: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginTop: 50,
            padding: 10
        },
        textInput: {
            borderColor: 'black' ,
            borderWidth: 1,
            padding: 4,
            borderRadius: 5,
            width: '80%'
        },
        show:{
            padding: 10
        },
        listItems: {
            backgroundColor: '#CCC',
            borderColor: "#222",
            padding: 7,
            width: '100%',
            marginVertical: 10,
            borderColor: '#222',
            borderWidth: 1,
            borderRadius: 3,
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
        }
    })


EX (By Default FlatList Search For 'Key' Prop Of Item If 'Key' Named To Another Name We Must Use keyExtractor)
--- 

    import React , {useState} from 'react';
    import { StyleSheet, Text, View , Button, TextInput , ScrollView, FlatList} from 'react-native';

    export default function App() {

        const [enteredGoal , setEnteredGoal] = useState('')
        const [goals , setGoals] = useState([])

        const handleEnteredGoals = enteredGoal => {
            setEnteredGoal(enteredGoal)
        }

        const addGoalHandler = () => {
            if(enteredGoal){
                // Make Entered Goal Here As Object To Use Key In Showing Items
                // React Native Handle Key By Default Inside FlatList
                setGoals(currentGoals => [...currentGoals , {doid : Math.random().toString() , value: enteredGoal}])
                setEnteredGoal('')
            }
        }


        return (
            <View>
                <View style={styles.mainContainer}>
                    <TextInput 
                    placeholder="Enter Goal Here"  
                    style={styles.textInput}
                    onChangeText={handleEnteredGoals}
                    value={enteredGoal}
                    />
                    <Button title="Add" onPress={addGoalHandler} />
                </View>
                <FlatList 
                    style={styles.show}
                    data={goals} 
                    keyExtractor={(item , index) =>  item.doid}
                    renderItem={
                    itemData => 
                        <View style={styles.listItems}>
                        <View>
                            <Text>{itemData.item.value}</Text>
                        </View>
                        </View> 
                    }
                />
            </View>
        );
    }

    const styles = StyleSheet.create({
        mainContainer: {
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginTop: 50,
            padding: 10
        },
        textInput: {
            borderColor: 'black' ,
            borderWidth: 1,
            padding: 4,
            borderRadius: 5,
            width: '80%'
        },
        show:{
            padding: 10
        },
        listItems: {
            backgroundColor: '#CCC',
            borderColor: "#222",
            padding: 7,
            width: '100%',
            marginVertical: 10,
            borderColor: '#222',
            borderWidth: 1,
            borderRadius: 3,
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center'
        }
    })